name: Retail Sales Dashboard

on:
  workflow_dispatch:
  push:
    branches: [main]
  
  
  pull_request:
    branches: [main]

jobs:
  dockerImage: 
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{secrets.ECR_REPOSITORY}}
          IMAGE_TAG: ${{secrets.IMAGE_TAG}}
        run: |
          echo "DATABASE_NAME=${{secrets.DATABASE_NAME}} >> .env"
          echo "TABLE_NAME=${{secrets.TABLE_NAME}} >> .env"
          echo "S3_BUCKET=${{secrets.S3_BUCKET}} >> .env"
          echo "REGION=${{secrets.REGION}} >> .env"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        
      - name: Initialise project and view terraform plan
        run: |
          cd terraform
          terraform fmt
          terraform init
          terraform apply -auto-approve
